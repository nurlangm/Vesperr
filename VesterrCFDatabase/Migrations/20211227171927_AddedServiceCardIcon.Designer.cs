// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VesterrCFDatabase.DAL;

namespace VesterrCFDatabase.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211227171927_AddedServiceCardIcon")]
    partial class AddedServiceCardIcon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VesterrCFDatabase.Models.ServiceCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServiceCards");
                });

            modelBuilder.Entity("VesterrCFDatabase.Models.ServiceIcon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceCardId")
                        .IsUnique();

                    b.ToTable("ServiceIcons");
                });

            modelBuilder.Entity("VesterrCFDatabase.Models.SiteEntrance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GetStarted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteEntrancessId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SiteEntrancessId");

                    b.ToTable("SiteEntrance");
                });

            modelBuilder.Entity("VesterrCFDatabase.Models.ServiceIcon", b =>
                {
                    b.HasOne("VesterrCFDatabase.Models.ServiceCard", null)
                        .WithOne("ServiceIcon")
                        .HasForeignKey("VesterrCFDatabase.Models.ServiceIcon", "ServiceCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VesterrCFDatabase.Models.SiteEntrance", b =>
                {
                    b.HasOne("VesterrCFDatabase.Models.SiteEntrance", "SiteEntrancess")
                        .WithMany()
                        .HasForeignKey("SiteEntrancessId");
                });
#pragma warning restore 612, 618
        }
    }
}
